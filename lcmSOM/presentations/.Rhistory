clusterVis_PCAsub(15)
clusterVis_line(15)
y <- genesInClust(15)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 16
```{r}
clusterVis(16)
clusterVis_PCA(16)
clusterVis_PCAsub(16)
clusterVis_line(16)
y <- genesInClust(16)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 17
```{r}
clusterVis(17)
clusterVis_PCA(17)
clusterVis_PCAsub(17)
clusterVis_line(17)
y <- genesInClust(17)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 18
```{r}
clusterVis(18)
clusterVis_PCA(18)
clusterVis_PCAsub(18)
clusterVis_line(18)
y <- genesInClust(18)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 19
```{r}
clusterVis(19)
clusterVis_PCA(19)
clusterVis_PCAsub(19)
clusterVis_line(19)
y <- genesInClust(19)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 20
```{r}
clusterVis(20)
clusterVis_PCA(20)
clusterVis_PCAsub(20)
clusterVis_line(20)
y <- genesInClust(20)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 21
```{r}
clusterVis(21)
clusterVis_PCA(21)
clusterVis_PCAsub(21)
clusterVis_line(21)
y <- genesInClust(21)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 22
```{r}
clusterVis(22)
clusterVis_PCA(22)
clusterVis_PCAsub(22)
clusterVis_line(22)
y <- genesInClust(22)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 23
```{r}
clusterVis(23)
clusterVis_PCA(23)
clusterVis_PCAsub(23)
clusterVis_line(23)
y <- genesInClust(23)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 24
```{r}
clusterVis(24)
clusterVis_PCA(24)
clusterVis_PCAsub(24)
clusterVis_line(24)
y <- genesInClust(24)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 25
```{r}
clusterVis(25)
clusterVis_PCA(25)
clusterVis_PCAsub(25)
clusterVis_line(25)
y <- genesInClust(25)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 26
```{r}
clusterVis(26)
clusterVis_PCA(26)
clusterVis_PCAsub(26)
clusterVis_line(26)
y <- genesInClust(26)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 27
```{r}
clusterVis(27)
clusterVis_PCA(27)
clusterVis_PCAsub(27)
clusterVis_line(27)
y <- genesInClust(27)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 28
```{r}
clusterVis(28)
clusterVis_PCA(28)
clusterVis_PCAsub(28)
clusterVis_line(28)
y <- genesInClust(28)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 29
```{r}
clusterVis(29)
clusterVis_PCA(29)
clusterVis_PCAsub(29)
clusterVis_line(29)
y <- genesInClust(29)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 30
```{r}
clusterVis(30)
clusterVis_PCA(30)
clusterVis_PCAsub(30)
clusterVis_line(30)
y <- genesInClust(30)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 31
```{r}
clusterVis(31)
clusterVis_PCA(31)
clusterVis_PCAsub(31)
clusterVis_line(31)
y <- genesInClust(31)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 32
```{r}
clusterVis(32)
clusterVis_PCA(32)
clusterVis_PCAsub(32)
clusterVis_line(32)
y <- genesInClust(32)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 33
```{r}
clusterVis(33)
clusterVis_PCA(33)
clusterVis_PCAsub(33)
clusterVis_line(33)
y <- genesInClust(33)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 34
```{r}
clusterVis(34)
clusterVis_PCA(34)
clusterVis_PCAsub(34)
clusterVis_line(34)
y <- genesInClust(34)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 35
```{r}
clusterVis(35)
clusterVis_PCA(35)
clusterVis_PCAsub(35)
clusterVis_line(35)
y <- genesInClust(35)
kable(y, format = "latex", booktabs = TRUE)
```
##Cluster 36
```{r}
clusterVis(36)
clusterVis_PCA(36)
clusterVis_PCAsub(36)
clusterVis_line(36)
y <- genesInClust(36)
kable(y, format = "latex", booktabs = TRUE)
```
I need to write something that looks at the statistical difference in tissue between each genotype.  In order to do that I have to subset based on tissue and do a t-test?  Do I need to correct for multiple testing? Ideally what information do I want from these clusters?
1. I want clusters that are enriched in leaf genes. Maybe I could just color special for leaf genes? done.
2. Significant differences between genotype at each tissue.
#Looking and visualizing individual genes: PIN1
date: June 25, 2014
The goal of this report is to look at PIN1 genes in the LCM data.
```{r, eval = false}
library(rmarkdown)
render("Solyc04g040220.Rmd", "pdf_document")
```
#Specify gene of interest
```{r}
gene1 <- "Solyc10g078370"
gene2 <- "Solyc10g080880"
gene3 <- "Solyc03g118740"
```
```{r}
library(reshape2)
library(ggplot2)
library(plyr)
```
```{r}
countData <- read.csv("../data/normalized_read_count.csv")
```
Set up the dataframe for analysis and visualization
```{r}
head(countData)
#Melt Data
countData <- melt(countData)
head(countData)
colnames(countData) <- c("gene", "sample", "count")
head(countData)
#set genotype
countData$genotype <- ifelse(grepl("wt", countData$sample, ignore.case = T), "wt",
ifelse(grepl("tf2", countData$sample, ignore.case = T), "tf2", "unknown"))
#countData$genotype <- if(grepl("wt", countData$sample)) {
#  "wt"
#  } else {
"tf2"
#  }
#set type
countData$tissue <- ifelse(grepl("other", countData$sample, ignore.case = T), "other",
ifelse(grepl("mbr", countData$sample, ignore.case = T), "mbr", "unknown"))
head(countData)
#Set Region
countData$region <- ifelse(grepl("a", countData$sample, ignore.case = T), "A",
ifelse(grepl("c", countData$sample, ignore.case = T), "C", "B"))
```
##Plot Data
Subsetting for genes of interest.  This is specified at the start of the script.
```{r}
gene1Data <- subset(countData, grepl(gene1, countData$gene))
gene2Data <- subset(countData, grepl(gene2, countData$gene))
gene3Data <- subset(countData, grepl(gene3, countData$gene))
graphData <- rbind(gene1Data, gene2Data, gene3Data)
graphData$sample2  <- paste(graphData$region, graphData$tissue, sep= "")
```
##Summarize Data
```{r}
sumGraph <- ddply(graphData, c("gene", "sample2", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
```
##Plot 1
This organizing the data to look at differences between genotype.
```{r}
ggplot(sumGraph, aes(sample2, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(.~gene) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1))
```
##Plot 2
This organizing the data to look at differences per region.
```{r}
ggplot(sumGraph, aes(gene, mean, fill = sample2)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(.~genotype) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1))
```
#Angle Analysis 2
This angle analysis was done differently that analysis1 on population 1.
-Population 1 was done from photographs on older plants, where we could only retrieve the angle for L1 - L4.
-Population 2 was performed on plants around 20 days old and was calculated from histology.
##Goals
Do analysis on
```{r}
angleData <- read.csv("anglePopulation1&2.csv")
head(angleData)
angleDataLeaf <- angleData[,c(2,3,4,5,6)]
angleDataSub <- subset(angleDataLeaf, leaf != "L7L8")
```
Make a boxplot that illustrates angle divergence.
```{r}
library(ggplot2)
ggplot(angleDataSub, aes(leaf, angle, color = genotype)) +
geom_boxplot(outlier.size = 0) +
geom_point(position = "jitter", alpha = .2) +
facet_grid(.~genotype) +
scale_color_brewer(palette="Dark2") +
theme_bw() +
geom_hline(yintercept=137.5, linetype = "dotted") +
scale_y_continuous(breaks=c(50, 100, 137.5, 150, 200)) +
theme(axis.title.x = element_text(face="bold", size=30),
axis.title.y = element_text(face="bold", size=30),
axis.text.x  = element_text(size=16),
axis.text.y  = element_text(size=16),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
strip.text.x = element_text(size = 20),
legend.position="none")
)
```
I need to make a diagram illustrates how many plants of e2 and wt are distichous, spiral & other.
Spiral = Both L2L3 and L3L4 between 147.5 and 127.5.
Decussate = Leaf L2L3 between 80 to 100 and L3L4 between 190 to 170.
Other = Everything else.
At this point it may be beneficial to change to the wide format where each plant in a single observation by casting.
```{r}
library(reshape)
head(angleData)
angleDataPlant <- angleData[,-c(6,1)]
castAngleData <- dcast(angleDataPlant, plant + genotype ~ leaf, value.var = "angle")
head(castAngleData)
```
How many of each genotype
```{r}
summary(castAngleData$genotype)
wtAngle <- subset(castAngleData, genotype == "3130")
#Spiral WT
wtSpiralL34 <- subset(wtAngle, L3L4 <= 150 & L3L4 >= 120)
dim(wtSpiralL34) #75
wtDecL34 <- subset(wtAngle, L3L4 <= 195 & L3L4 >= 165)
dim(wtDecL34) #5
##e2
e2Angle <- subset(castAngleData, genotype == "e2")
dim(e2Angle)
#Spiral e2
e2SpiralL34 <- subset(e2Angle, L3L4 <= 150 & L3L4 >= 120)
dim(e2SpiralL34) #18
e2DecL34 <- subset(e2Angle, L3L4 <= 195 & L3L4 >= 165)
dim(e2DecL34) #39
39/88
44+39
83/88
#How many plant were recorded for L3L4
summary(is.na(e2Angle$L3L4)) #88
#Other
88 - 39 -18 #=31
```
```
Analyzing RNAseq for differential expression
-------------------------------------------
```{r}
library(edgeR)
```
###read in raw count data per gene
```{r}
counts <- read.delim("../data/sam2countsResults.tsv",row.names=1)
boxplot(counts)
#Look at boxplot of log2
normexplog <- log(counts,2)
boxplot(normexplog)
```
```{r}
#check the file
head(counts)
```
```{r, results='hide'}
summary(counts)
```
Library wtbother1.4 is disturbingly small, I am going to remove it from analysis.
```{r}
counts <- subset(counts, select=-c(wtbother1.4))
```
Need to convert NA to 0 counts
```{r}
counts[is.na(counts)] <- 0
```
We are adding a new column "group", that identifies which library belongs to which group sample type.
```{r}
group <- c(
rep("tf2ambr", 4),
rep("tf2aother", 4),
rep("tf2bmbr", 3),
rep("tf2bother", 5),
rep("tf2cmbr", 4),
rep("tf2cother", 4),
rep("wtambr", 3),
rep("wtaother", 4),
rep("wtbmbr", 4),
rep("wtbother", 3),
rep("wtcmbr", 6),
rep("wtcother", 3)
)
```
Now we have to put the data into a DGEList object. [Here is a nice summary](http://davetang.org/muse/2012/01/19/the-dgelist-object-in-r/) of what the DGEList object is all about.
```{r}
d <- DGEList(counts=counts, group=group)
```
Check to make sure each group matches the correct sample.
```{r}
head(d$counts)
d$samples
#Filter to exclude genes that have <2 counts in (N Rep)-1
cpm.d<- cpm(d)
d <- d[rowSums(cpm.d>1)>=3,]
#normalize library
d <- calcNormFactors(d)
d$pseudo<- equalizeLibSizes(d)
write.csv (d$pseudo$pseudo,"normalized_read_count.csv")
# read in norm data
data_norm <- read.csv("normalized_read_count.csv", row.names=1)
dim(data_norm)
```
MDS using dist and cmdscale
==========================
library
```{r}
library(ggplot2)
```
Prepare for MDS plot
```{r}
m <- cmdscale(dist(scale(t(data_norm))))
colnames(m) <- c("x", "y")
m<-as.data.frame(m)
```
Label for visualization
```{r}
m$sampleSection <- c(
rep("ambr", 4),
rep("aother", 4),
rep("bmbr", 3),
rep("bother", 5),
rep("cmbr", 4),
rep("cother", 4),
rep("ambr", 3),
rep("aother", 4),
rep("bmbr", 4),
rep("bother", 3),
rep("cmbr", 6),
rep("cother", 3)
)
m$genotype <- c(
rep("tf2", 24),
rep("wt", 23)
)
m$type <- c(
rep("mbr", 4),
rep("other", 4),
rep("mbr", 3),
rep("other", 5),
rep("mbr", 4),
rep("other", 4),
rep("mbr", 3),
rep("other", 4),
rep("mbr", 4),
rep("other", 3),
rep("mbr", 6),
rep("other", 3)
)
```
###All the samples
There is no visible trends, even when subsetting by sample.
```{r}
ggplot(m, aes(x,y,colour=sampleSection))+geom_point(size=5)+theme_bw()
ggplot(m, aes(x,y,colour=sampleSection))+geom_point(size=5)+theme_bw() + facet_grid(.~ genotype)
```
###By Genotype
There is no visible trend
```{r}
ggplot(m, aes(x,y,colour=genotype))+geom_point(size=5)+theme_bw()
```
###All together
The only time a slight trend appears is between Marginal Blastozone Regions (MBR) and rachis regions (other).
```{r}
ggplot(m, aes(x,y,colour=type, label=sampleSection))+geom_point(size=1)+theme_bw() + geom_text()
ggplot(m, aes(x,y,colour=type, label=sampleSection))+geom_point(size=1)+theme_bw() + geom_text() + facet_grid(. ~ genotype)
```
library(rmarkdown)
render("MDS.Rmd", "pdf_document")
clusterVis_PCA(2)
clusterVis_geno(5)
cluster_geno(4)
clusterVis_geno(4)
plot.data
head(plot.data)
sub_cluster <- subset(plot.data, som.unit.classif==1)
sub_cluster <- subset(plot.data, som.unit.classif==1)
sub_cluster <- subset(plot.data, ssom.unit.classif==1)
head(sub_cluster)
clusterVis_line(28)
clusterVis_geno <- function(clustNum){
sub_cluster <- subset(plot.data, ssom.unit.classif==1)
sub_data <- sub_cluster[,c(1,9:14)] # just the sample types
names(sub_data)
m.data <- melt(sub_data)
m.data$genotype <- as.factor(m.data$genotype)
m.data$region <- ifelse(grepl("A", m.data$variable, ignore.case = T), "A.tip",
ifelse(grepl("B", m.data$variable, ignore.case = T), "B.middle", "C.base"))
#m.data$tissue <- ifelse(grepl("other", m.data$variable, ignore.case = T), "rachis",
#ifelse(grepl("mbr", m.data$variable, ignore.case = T), "margin", "base"))
p <- ggplot(m.data, aes(x=variable, y=value, color = genotype))
p + geom_point(alpha=0.5, position="jitter", size=1) +
geom_boxplot(alpha=0.75, outlier.size=0) +
theme_bw() +
scale_colour_manual(values=c("#ef8a62", "#67a9cf"))
}
setwd("~/Dropbox/Research/LCMProject/08SOM/lcmSOM/presentations")
